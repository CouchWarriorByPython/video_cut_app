from azure.identity import ClientSecretCredential
from azure.storage.blob import BlobServiceClient
from pymongo import MongoClient
from backend.config.settings import Settings


def delete_azure_output_folder() -> bool:
    """
    –í–∏–¥–∞–ª—è—î –≤—Å—ñ blob-–∏ –∑ Azure Blob Storage, —è–∫—ñ –º–∞—é—Ç—å –ø—Ä–µ—Ñ—ñ–∫—Å azure_output_folder_path.

    Returns:
        bool: True —è–∫—â–æ –æ–ø–µ—Ä–∞—Ü—ñ—è –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ, False —ñ–Ω–∞–∫—à–µ
    """
    try:
        credential = ClientSecretCredential(
            tenant_id=Settings.azure_tenant_id,
            client_id=Settings.azure_client_id,
            client_secret=Settings.azure_client_secret
        )

        account_url = Settings.get_azure_account_url()
        blob_service_client = BlobServiceClient(account_url=account_url, credential=credential)
        container_client = blob_service_client.get_container_client(Settings.azure_storage_container_name)

        prefix = Settings.azure_output_folder_path.rstrip("/") + "/"
        print(f"üßπ –í–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö blob-—ñ–≤ –∑ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º '{prefix}'...")

        deleted_count = 0
        for blob in container_client.list_blobs(name_starts_with=prefix):
            blob_client = container_client.get_blob_client(blob.name)
            blob_client.delete_blob()
            print(f"‚ùå –í–∏–¥–∞–ª–µ–Ω–æ: {blob.name}")
            deleted_count += 1

        if deleted_count == 0:
            print(f"‚ÑπÔ∏è –£ '{prefix}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ–≥–æ blob-—Ñ–∞–π–ª—É.")
        else:
            print(f"‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ {deleted_count} —Ñ–∞–π–ª—ñ–≤ –∑ Azure Storage.")

        return True

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –ø–∞–ø–∫–∏ '{Settings.azure_output_folder_path}': {e}")
        return False


def clear_video_clips_collection() -> bool:
    """
    –û—á–∏—â–∞—î –∫–æ–ª–µ–∫—Ü—ñ—é video_clips —É MongoDB.

    Returns:
        bool: True —è–∫—â–æ –æ–ø–µ—Ä–∞—Ü—ñ—è –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ, False —ñ–Ω–∞–∫—à–µ
    """
    client = None
    try:
        print("üóÑÔ∏è –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB...")
        client = MongoClient(Settings.mongo_uri)
        db = client[Settings.mongo_db_name]
        clips_collection = db["video_clips"]

        print("üßπ –û—á–∏—â–µ–Ω–Ω—è –∫–æ–ª–µ–∫—Ü—ñ—ó video_clips...")
        result = clips_collection.delete_many({})
        deleted_count = result.deleted_count

        if deleted_count == 0:
            print("‚ÑπÔ∏è –ö–æ–ª–µ–∫—Ü—ñ—è video_clips –±—É–ª–∞ –ø–æ—Ä–æ–∂–Ω—å–æ—é.")
        else:
            print(f"‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ {deleted_count} –∑–∞–ø–∏—Å—ñ–≤ –∑ –∫–æ–ª–µ–∫—Ü—ñ—ó video_clips.")

        return True

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—á–∏—â–µ–Ω–Ω—ñ –∫–æ–ª–µ–∫—Ü—ñ—ó video_clips: {e}")
        return False
    finally:
        if client:
            client.close()
            print("üîí –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ MongoDB –∑–∞–∫—Ä–∏—Ç–æ.")


def reset_source_videos_status() -> bool:
    """
    –°–∫–∏–¥–∞—î —Å—Ç–∞—Ç—É—Å –≤—Å—ñ—Ö –≤—ñ–¥–µ–æ –≤ –∫–æ–ª–µ–∫—Ü—ñ—ó source_videos –Ω–∞ 'not_annotated'.

    Returns:
        bool: True —è–∫—â–æ –æ–ø–µ—Ä–∞—Ü—ñ—è –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ, False —ñ–Ω–∞–∫—à–µ
    """
    client = None
    try:
        print("üîÑ –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –≤—ñ–¥–µ–æ –≤ source_videos...")
        client = MongoClient(Settings.mongo_uri)
        db = client[Settings.mongo_db_name]
        source_collection = db["source_videos"]

        result = source_collection.update_many(
            {"status": {"$ne": "not_annotated"}},
            {"$set": {"status": "not_annotated"}}
        )

        updated_count = result.modified_count

        if updated_count == 0:
            print("‚ÑπÔ∏è –í—Å—ñ –≤—ñ–¥–µ–æ –≤–∂–µ –º–∞—é—Ç—å —Å—Ç–∞—Ç—É—Å 'not_annotated'.")
        else:
            print(f"‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞—Ç—É—Å –¥–ª—è {updated_count} –≤—ñ–¥–µ–æ.")

        return True

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–∫–∏–¥–∞–Ω–Ω—ñ —Å—Ç–∞—Ç—É—Å—É –≤—ñ–¥–µ–æ: {e}")
        return False
    finally:
        if client:
            client.close()


def cleanup_all() -> None:
    """
    –ü–æ–≤–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ - –≤–∏–¥–∞–ª—è—î –≤—Å—ñ –∫–ª—ñ–ø–∏ –∑ Azure —Ç–∞ MongoDB,
    —Å–∫–∏–¥–∞—î —Å—Ç–∞—Ç—É—Å–∏ –≤—ñ–¥–µ–æ –¥–ª—è –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –ø–æ–≤—Ç–æ—Ä–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏.
    """
    print("üöÄ –ü–æ—á–∞—Ç–æ–∫ –ø–æ–≤–Ω–æ–≥–æ –æ—á–∏—â–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏...")
    print("=" * 50)

    success_count = 0
    total_operations = 3

    if delete_azure_output_folder():
        success_count += 1

    print("-" * 30)

    if clear_video_clips_collection():
        success_count += 1

    print("-" * 30)

    if reset_source_videos_status():
        success_count += 1

    print("=" * 50)

    if success_count == total_operations:
        print("üéâ –ü–æ–≤–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        print("üìù –¢–µ–ø–µ—Ä –º–æ–∂–Ω–∞ –∑–∞–ø—É—Å–∫–∞—Ç–∏ –Ω–∞—Ä—ñ–∑–∫—É –∑ —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞.")
    else:
        print(f"‚ö†Ô∏è –ó–∞–≤–µ—Ä—à–µ–Ω–æ –∑ –ø–æ–º–∏–ª–∫–∞–º–∏: {success_count}/{total_operations} –æ–ø–µ—Ä–∞—Ü—ñ–π –≤–∏–∫–æ–Ω–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ.")
        print("üîç –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏ –≤–∏—â–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –ø–æ–º–∏–ª–æ–∫.")


if __name__ == "__main__":
    cleanup_all()