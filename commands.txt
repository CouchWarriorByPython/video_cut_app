# Backend development server
cd backend && uvicorn main:app --host 0.0.0.0 --port 8000 --reload

# Celery worker
cd backend && celery -A backend.background_tasks.app worker --loglevel=info

# Celery Beat (for periodic tasks)
cd backend && celery -A backend.background_tasks.app beat --loglevel=info

# Celery Flower (monitoring)
cd backend && celery -A backend.background_tasks.app flower

# All services with Docker Compose
docker-compose -f docker-compose-dev.yml up --build

# Production
docker-compose -f docker-compose-prod.yml up --build -d

# View logs
docker-compose -f docker-compose-dev.yml logs -f backend

# Docker Diagnostics Commands
# =================================

# Check all container status
docker-compose -f docker-compose-dev.yml ps

# View logs for specific services
docker-compose -f docker-compose-dev.yml logs -f celery-beat
docker-compose -f docker-compose-dev.yml logs -f celery-maintenance
docker-compose -f docker-compose-dev.yml logs -f redis
docker-compose -f docker-compose-dev.yml logs -f mongodb

# Restart specific services
docker-compose -f docker-compose-dev.yml restart celery-beat
docker-compose -f docker-compose-dev.yml restart redis
docker-compose -f docker-compose-dev.yml restart backend

# Execute commands inside containers
docker-compose -f docker-compose-dev.yml exec app bash
docker-compose -f docker-compose-dev.yml exec celery-beat celery -A backend.background_tasks.app inspect active
docker-compose -f docker-compose-dev.yml exec redis redis-cli INFO

# Health check URLs (when system is running)
# http://localhost:8888/admin (go to Diagnostics tab)
# http://localhost:5556 (Celery Flower monitoring)
# http://localhost:8082 (MongoDB Express)

# Manual cleanup commands via API
curl -X GET "http://localhost:8888/admin/system-health" -H "Authorization: Bearer YOUR_TOKEN"
curl -X POST "http://localhost:8888/admin/cleanup-locks" -H "Authorization: Bearer YOUR_TOKEN"
