services:
  mongodb:
    image: mongo:7.0
    container_name: video_annotator_mongodb_dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    env_file:
      - .env
    volumes:
      - mongodb_data_dev:/data/db
      - ./mongo/mongod.conf:/etc/mongod.conf:ro
    command: [ "mongod", "--config", "/etc/mongod.conf" ]
    logging:
      driver: "local"
      options:
        max-size: "10m"
        max-file: "3"

  mongo-express:
    image: mongo-express:latest
    container_name: video_annotator_mongo_express_dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    env_file:
      - .env
    depends_on:
      - mongodb

  redis:
    image: redis:7.2-alpine
    container_name: video_annotator_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: video_annotator_app_dev
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./temp:/app/temp
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis

  celery-general:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: video_annotator_celery_general_dev
    restart: unless-stopped
    command: celery -A backend.background_tasks.app worker --loglevel=info --concurrency=2 --queues=default,video_processing,clip_processing
    env_file:
      - .env
    volumes:
      - ./temp:/app/temp
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis

  celery-conversion:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: video_annotator_celery_conversion_dev
    restart: unless-stopped
    command: celery -A backend.background_tasks.app worker --loglevel=info --concurrency=1 --queues=video_conversion --max-tasks-per-child=10
    env_file:
      - .env
    volumes:
      - ./temp:/app/temp
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis

  flower:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: video_annotator_flower_dev
    restart: unless-stopped
    command: celery -A backend.background_tasks.app flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis

  nginx:
    image: nginx:alpine
    container_name: video_annotator_nginx_dev
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app

volumes:
  mongodb_data_dev:
  redis_data_dev: