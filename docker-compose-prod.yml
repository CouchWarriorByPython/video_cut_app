services:
  redis:
    image: redis:7.2-alpine
    container_name: video_annotator_redis_prod
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data_prod:/data
    command: redis-server --maxmemory 1gb --maxmemory-policy allkeys-lru --save "" --appendonly no
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: video_annotator_app_prod
    restart: unless-stopped
    ports:
      - "8002:8000"
    env_file:
      - .env
    volumes:
      - ./temp:/app/temp
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: '4096M'
        reservations:
          cpus: '1.0'
          memory: '2048M'

  celery-general:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: video_annotator_celery_general_prod
    restart: unless-stopped
    command: celery -A backend.background_tasks.app worker --loglevel=info --concurrency=4 --queues=default,video_processing,clip_processing
    env_file:
      - .env
    volumes:
      - ./temp:/app/temp
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: '3072M'
        reservations:
          cpus: '1.0'
          memory: '1536M'

  celery-conversion:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: video_annotator_celery_conversion_prod
    restart: unless-stopped
    command: celery -A backend.background_tasks.app worker --loglevel=info --concurrency=8 --queues=video_conversion --max-tasks-per-child=5
    env_file:
      - .env
    volumes:
      - ./temp:/app/temp
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: '4096M'
        reservations:
          cpus: '2.0'
          memory: '2048M'

  flower:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: video_annotator_flower_prod
    restart: unless-stopped
    command: celery -A backend.background_tasks.app flower --port=5555
    ports:
      - "5556:5555"
    env_file:
      - .env
    depends_on:
      - redis

  nginx:
    image: nginx:alpine
    container_name: video_annotator_nginx_prod
    restart: unless-stopped
    ports:
      - "8888:80"
    volumes:
      - ./nginx/conf/nginx.prod.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app

volumes:
  mongodb_data_prod:
  redis_data_prod:

# Для GPU доступу потрібно:
# 1. Встановити nvidia-container-toolkit:
#    sudo apt install nvidia-container-toolkit
#    sudo systemctl restart docker
# 
# 2. Запускати з GPU підтримкою:
#    docker-compose -f docker-compose-prod.yml up celery-conversion --gpus all