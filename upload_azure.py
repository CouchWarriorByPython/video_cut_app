from azure.identity import ClientSecretCredential
from azure.storage.blob import BlobServiceClient
from configs import Settings
from pathlib import Path


def upload_video_to_azure(source: str) -> None:
    """
    –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –≤—ñ–¥–µ–æ—Ñ–∞–π–ª –≤ Azure Blob Storage —É –ø–∞–ø–∫—É, –≤–∫–∞–∑–∞–Ω—É –≤ Settings.azure_output_folder_path.

    :param source: –õ–æ–∫–∞–ª—å–Ω–∏–π —à–ª—è—Ö –¥–æ –≤—ñ–¥–µ–æ—Ñ–∞–π–ª—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 'videos/20250502-1628-IN_Recording.mp4')
    """
    try:
        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ Service Principal
        credential = ClientSecretCredential(
            tenant_id=Settings.azure_tenant_id,
            client_id=Settings.azure_client_id,
            client_secret=Settings.azure_client_secret
        )

        # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Blob Service
        account_url = Settings.get_azure_account_url()
        blob_service_client = BlobServiceClient(account_url=account_url, credential=credential)
        container_client = blob_service_client.get_container_client(Settings.azure_storage_container_name)

        # –§–æ—Ä–º—É—î–º–æ —à–ª—è—Ö —É blob (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, annotation/20250502-1628-IN_Recording.mp4)
        file_name = Path(source).name
        blob_path = f"{Settings.azure_input_folder_path.rstrip('/')}/{file_name}"

        print(f"üì§ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è '{source}' ‚Üí '{blob_path}'")

        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª
        with open(source, "rb") as data:
            blob_client = container_client.get_blob_client(blob_path)
            blob_client.upload_blob(data, overwrite=True)

        print(f"‚úÖ –§–∞–π–ª '{file_name}' —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –≤ Azure Blob Storage!")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ: {e}")


upload_video_to_azure("20250502-1628-IN_Recording.mp4")
